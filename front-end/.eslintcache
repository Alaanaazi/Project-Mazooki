[{"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\index.js":"1","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\App.js":"2","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\reportWebVitals.js":"3","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Header.js":"4","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Footer.js":"5","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Login.js":"6","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Home.js":"7","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ViewSurveys.js":"8","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyItem.js":"9","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AddSurvey.js":"10","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\QuestionItem.js":"11","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\QuestionPopUp.js":"12","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Radiobutton.js":"13","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\RadioButton.js":"14","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Checkbox.js":"15","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ViewSurevyItem.js":"16","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ParticleComp.js":"17","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AdminViewSurveyList.js":"18","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AdminSurveyItem.js":"19","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyAnalysis.js":"20","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyAnalyisItem.js":"21"},{"size":543,"mtime":1610706548492,"results":"22","hashOfConfig":"23"},{"size":1087,"mtime":1610775076068,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"23"},{"size":4135,"mtime":1611224989221,"results":"26","hashOfConfig":"23"},{"size":566,"mtime":1609499309804,"results":"27","hashOfConfig":"23"},{"size":1439,"mtime":1609949703173,"results":"28","hashOfConfig":"23"},{"size":2604,"mtime":1611227938268,"results":"29","hashOfConfig":"23"},{"size":1544,"mtime":1611037155861,"results":"30","hashOfConfig":"23"},{"size":1136,"mtime":1611041357791,"results":"31","hashOfConfig":"23"},{"size":6023,"mtime":1611818226869,"results":"32","hashOfConfig":"23"},{"size":3435,"mtime":1610338735776,"results":"33","hashOfConfig":"23"},{"size":7411,"mtime":1611040666300,"results":"34","hashOfConfig":"23"},{"size":1783,"mtime":1610009063637,"results":"35","hashOfConfig":"36"},{"size":1783,"mtime":1610040367029,"results":"37","hashOfConfig":"23"},{"size":1780,"mtime":1610040365381,"results":"38","hashOfConfig":"23"},{"size":11708,"mtime":1611820464339,"results":"39","hashOfConfig":"23"},{"size":2517,"mtime":1610446305316,"results":"40","hashOfConfig":"23"},{"size":1628,"mtime":1611144023418,"results":"41","hashOfConfig":"23"},{"size":2814,"mtime":1611080453916,"results":"42","hashOfConfig":"23"},{"size":1569,"mtime":1610887008932,"results":"43","hashOfConfig":"23"},{"size":10823,"mtime":1611662222420,"results":"44","hashOfConfig":"23"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1obc2fe",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"47"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"47"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ijn6sl",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"47"},"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\index.js",[],["97","98"],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\App.js",["99"],"import './App.css';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Logo from './components/Home';\nimport Login from './components/Login';\nimport ViewSurveys from './components/ViewSurveys';\nimport AddSurvey from './components/AddSurvey';\nimport AdminViewSurveyList from './components/AdminViewSurveyList';\nimport ViewSurveyItem from './components/ViewSurevyItem';\nimport SurveyAnalysis from './components/SurveyAnalysis';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\n\n\nfunction App() {\n  return (\n      <Router>\n        <Header />\n          <Route exact path=\"/\" component={Logo} />\n          <Route path=\"/login\" component={AdminViewSurveyList} />\n          <Route path=\"/view-surveys\" component={ViewSurveys} />\n      <Route path=\"/view-survey-item/:id\" exact component={ViewSurveyItem} />\n      <Route path=\"/survey-analysis/:id\" exact component={SurveyAnalysis} />\n      \n      <Route path=\"/create-survey\" component={AddSurvey} />\n     \n      <Footer />\n      \n      </Router>\n  );\n}\n\nexport default App;\n\n\n/*\n\n\n*/\n","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Header.js",["100","101","102"],"import React, { Component } from 'react';\r\nimport '../styles/header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\nclass Header extends Component {\r\n    \r\n    state = {\r\n        navItem:\"\"\r\n    }\r\n    \r\n\r\n    handleNavChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.name;\r\n        this.setState({ navItem: value });\r\n        console.log(this.state)\r\n    };\r\n\r\n\r\n\r\n    \r\n\r\n    render() { \r\n\r\n        \r\n            \r\n        return ( \r\n            <React.Fragment>\r\n                <header className=\"sticky-top\"> \r\n                    <nav class=\"navbar navbar-expand-lg navbar-dark bgPurple\">\r\n                        <div class=\"d-flex flex-grow-1\">\r\n                            <span class=\"w-100 d-lg-none d-block\"></span>\r\n                            <Link name=\"title\" class=\"navbar-brand h2 navTitleFont\" to=\"/\" style={{fontSize: '30px'}} onClick={this.handleNavChange}>\r\n                                MAŹOOKÏ\r\n                            </Link>\r\n                            <div class=\"w-100 text-right\">\r\n                                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#myNavbar7\">\r\n                                    <span class=\"navbar-toggler-icon\"></span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"collapse navbar-collapse flex-grow-1 text-right\" id=\"myNavbar7\">\r\n                            <ul class=\"navbar-nav ml-auto flex-nowrap navLinFont\">\r\n                                <li class={this.state.navItem===\"link1\" || window.location.href=='http://localhost:3000/create-survey' ? \"nav-item active\":\"nav-item\"} >\r\n                                    <Link name=\"link1\" to=\"/create-survey\" class=\"nav-link\" style={linkStyle} onClick={this.handleNavChange}>CREATE SURVEY</Link>\r\n                                </li>\r\n                                <li class={this.state.navItem===\"link2\" || window.location.href=='http://localhost:3000/view-surveys' || window.location.href.includes('http://localhost:3000/view-survey-item') ? \"nav-item active\":\"nav-item\"} >\r\n                                    <Link name=\"link2\" to=\"/view-surveys\" class=\"nav-link\" style={linkStyle} onClick={this.handleNavChange}>VIEW SURVEYS</Link>\r\n                                </li>\r\n                                <li class={this.state.navItem===\"link3\" || window.location.href=='http://localhost:3000/login' || window.location.href.includes('http://localhost:3000/survey-analysis')? \"nav-item active\":\"nav-item\"} age=\"lss\" >\r\n                                    <Link name=\"link3\" to=\"/login\" class=\"nav-link\" style={linkStyle} onClick={this.handleNavChange}>MANAGE SURVEYS</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </header>\r\n            </React.Fragment>\r\n\r\n\r\n         );\r\n    }\r\n}\r\n \r\nconst linkStyle = {\r\n    marginRight: '80px'\r\n}\r\n\r\n\r\nexport default Header;\r\n\r\n/*\r\n    Problem :  \r\n    Initially the class of li tags in line no 38,41 and 44 should be \"nav-item\" and once it's\r\n    clicked it should be changed to \"nav-item active\". (the active class should be applied to the \r\n    link that is clicked and all the class of the rest of the links should be \"nav-item\")\r\n\r\n    A method to implement this is written in line no 9 but how ever it is only working when the page \r\n    is loaded and only tested it for one li tag\r\n\r\n*/\r\n\r\n/*\r\n    Solution : \r\n    Refer the changes on line 43 to 50. Use the onCLick method to invoke the method handleNavchange where you can handle any action.\r\n    Used state to maintain current active navitem .\r\n    (Recommondation : create a new component for nav item and maintain the state there .)\r\n    If you are trying to implement a nav tab (like behavior) avoid route in the <link> since this will clear the state, instead dynamically render the content below based on the current navItem state.\r\n*/","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Footer.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Login.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Home.js",["103","104","105","106"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport '../styles/home.css';\r\nimport survey1 from '../images/survey1s.jpg'\r\nimport survey2 from '../images/survey2.jpg'\r\nimport survey3 from '../images/survey3.jpg'\r\nimport Particles from 'react-particles-js'; \r\n\r\nclass Logo extends Component {\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n\r\n                <div className=\"pageStyle jumbotron vertical-center\"> \r\n                    <div class=\"container p-3 contHome white-grad\">\r\n                            <h1 className=\"p-3\">WELCOME TO MAŹOOKÏ</h1>\r\n                                <div class=\"container p-3 cont1Home w-75 p-3\">\r\n                                <p>MAŹOOKÏ is an online survey creation and analysis tool where you can create your own surveys or respond to others' surveys and come to a conclusion based on the analysis of the data collected</p>\r\n                                </div>\r\n                        </div>\r\n                    \r\n                        <div class=\"container p-3 contHome white-grad second\">\r\n                            <h1 className=\"p-3\">PROCESS OF MAŹOOKÏ ONLINE SURVEYS</h1>\r\n                                <div class=\"container p-3 cont1Home w-75 p-3\">\r\n                                <p>Data is collected from each survey and processed automatically and presents the overall summary of each survey based on the data collected</p>\r\n                                </div>\r\n                                <div class=\"row outercon spacing\">\r\n                                    <div class=\"col-lg-4 col-sm-12 img1\">\r\n                                        <p>1. Collect Data</p>\r\n                                        <img src={survey3} />\r\n                                        \r\n                                    </div>\r\n                                    <div class=\"col-lg-4 col-sm-12 img1\">\r\n                                        <p>2. Process Data</p>\r\n                                        <img src={survey2} />\r\n                                    </div>\r\n                                    <div class=\"col-lg-4 col-sm-12 img1\">\r\n                                        <p>3. Output overall analysis</p>\r\n                                        <img src={survey1} />\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                        </div>\r\n\r\n                    </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Logo;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ViewSurveys.js",["107","108"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport '../styles/viewSurveys.css';\r\nimport SurveyItem from \"../components/SurveyItem\";\r\nimport axios from 'axios';\r\n\r\nclass ViewSurveys extends Component {\r\n    state = {\r\n\r\n        surveyList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/surveys/')\r\n          .then(response => {\r\n            this.setState({ surveyList: response.data })\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n    }\r\n    \r\n    renderItem = () => {\r\n        if (this.state.surveyList.length == 0) {\r\n            return <React.Fragment>\r\n                <h1 style={{color: '#fff'}}>No surveys are available at the moment</h1>\r\n\r\n            </React.Fragment>\r\n        }\r\n\r\n        if (this.state.surveyList.length != 0) {\r\n            return <React.Fragment>\r\n                {this.state.surveyList.reverse().map(survey => \r\n                        \r\n                        <SurveyItem survey={survey} key={survey._id} />\r\n                        \r\n                    )}\r\n\r\n            </React.Fragment>\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"pageStyle1 jumbotron vertical-center\"> \r\n                    \r\n                {this.renderItem()}\r\n\r\n\r\n               \r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ViewSurveys;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyItem.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AddSurvey.js",["109"],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\QuestionItem.js",["110","111","112","113"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass QuestionItem extends Component {\r\n\r\n    onDelete = e => {\r\n        e.preventDefault();\r\n        this.props.deleteQuestion(e,e.target.value)\r\n    }\r\n\r\n\r\n    \r\n    questionType() {\r\n        if(this.props.question.type == 'checkbox') {\r\n            return <React.Fragment>\r\n                    <div className=\"form-group text-center ara qSize\">\r\n                    <label for=\"exampleInputPassword1\">{this.props.question.question}</label>\r\n                    <button value={this.props.question.question} type=\"submit\" className=\"minusBtn1\" onClick={this.onDelete} >-</button>\r\n                    \r\n                    </div>\r\n                \r\n\r\n                    {this.props.question.answers.map(answer => \r\n                        \r\n                        <div class=\"form-check text-center chAlign\">\r\n                            <input class=\"form-check-input inputC\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" disabled />\r\n                            <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                            <span className=\"optionStyle\">  {answer.options} </span>\r\n                            </label>\r\n                        </div>\r\n                        \r\n                    )}\r\n                </React.Fragment>\r\n        }\r\n\r\n        if(this.props.question.type == 'radio') {\r\n            return <React.Fragment>\r\n                        <div className=\"form-group text-center ara qSize\">\r\n                    <label for=\"exampleInputPassword1\">{this.props.question.question}</label>\r\n                    <button value={this.props.question.question} type=\"submit\" className=\"minusBtn1\" onClick={this.onDelete} >-</button>\r\n                        </div>\r\n                \r\n\r\n                    {this.props.question.answers.map(answer => \r\n                        \r\n                        <div class=\"form-check chAlign\">\r\n                            <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" disabled />\r\n                            <label class=\"form-check-label\" for=\"flexRadioDefault1\">\r\n                            <span className=\"optionStyle\"> {answer.options} </span>\r\n                            </label>\r\n                        </div>\r\n                        \r\n                )}\r\n                </React.Fragment>\r\n        }\r\n\r\n        if(this.props.question.type == 'text') {\r\n            return <React.Fragment>\r\n                        <div className=\"form-group text-center ara qSize\">\r\n                    <label for=\"exampleInputPassword1\">{this.props.question.question}</label>\r\n                    <button value={this.props.question.question} type=\"submit\" className=\"minusBtn1\" onClick={this.onDelete} >-</button>\r\n                                    <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control inputQ\"\r\n                                            value=\"\"\r\n                                            disabled\r\n                                        />\r\n                        </div>\r\n                </React.Fragment>\r\n        }\r\n    }\r\n\r\n    render() { \r\n\r\n        return (  \r\n            <React.Fragment>\r\n                    {this.questionType()}\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default QuestionItem;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\QuestionPopUp.js",["114"],"import React, { Component } from 'react';\r\nimport Modal from 'react-awesome-modal';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { v4 as uuid } from \"uuid\"; \r\nimport { Link } from 'react-router-dom';\r\nimport RadioButton from '../components/RadioButton';\r\nimport Checkbox from '../components/Checkbox';\r\nimport { AddCircle,Add } from '@material-ui/icons';\r\n\r\n\r\n\r\nclass QuestionModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.deleteOption = this.deleteOption.bind(this);\r\n      }\r\n\r\n    state = { \r\n        visible: false,\r\n        Question: {\r\n            ask: '',\r\n            select: '',\r\n            rAnswer: '',\r\n            radiobuttonAnswers: []\r\n        }\r\n    }\r\n    \r\n    openModal() {\r\n        this.setState({\r\n            visible : true\r\n        });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({\r\n            visible : false\r\n        });\r\n    }\r\n\r\n    selectEvent = event => {\r\n        this.setState({\r\n            Question: {\r\n                ...this.state.Question,\r\n                select: event.target.value\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    onChangeRadio = event => {\r\n        this.setState({\r\n            Question: {\r\n                ...this.state.Question,\r\n                rAnswer : event.target.value \r\n            }\r\n        });\r\n    }\r\n\r\n    onRadioSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const ans = {\r\n            id: uuid(),\r\n            options : this.state.Question.rAnswer\r\n        }\r\n\r\n        this.setState({\r\n            Question: {\r\n                ...this.state.Question,\r\n                radiobuttonAnswers: [...this.state.Question.radiobuttonAnswers, ans],\r\n                rAnswer : ''\r\n            }\r\n            \r\n        });\r\n    }\r\n\r\n    deleteOption(i) {\r\n        this.setState({\r\n            Question: {\r\n                ...this.state.Question,\r\n                radiobuttonAnswers: [...this.state.Question.radiobuttonAnswers.filter(answer => answer.id != i)]\r\n            }\r\n        });\r\n    }\r\n\r\n    \r\n    displayQuestion = () => {\r\n        if (this.state.Question.selects === 'text') {\r\n            return null\r\n        }\r\n\r\n        if (this.state.Question.select === 'radio') {\r\n            return <RadioButton\r\n                        Question={this.state.Question}\r\n                        onChangeRadio={this.onChangeRadio}\r\n                        deleteOption={this.deleteOption}\r\n                        onRadioSubmit={this.onRadioSubmit}\r\n                    />\r\n        }\r\n\r\n        if (this.state.Question.select === 'checkbox') {\r\n            return <Checkbox\r\n                        Question={this.state.Question}\r\n                        onChangeRadio={this.onChangeRadio}\r\n                        deleteOption={this.deleteOption}\r\n                        onRadioSubmit={this.onRadioSubmit}\r\n                    />\r\n        }\r\n    }\r\n\r\n    aa = e => {\r\n        e.preventDefault();\r\n        this.closeModal()\r\n        this.props.addQuestion(e, this.state.Question)\r\n        \r\n        this.setState({\r\n            Question: {\r\n                ...this.state.Question,\r\n                ask: '',\r\n                select: '',\r\n                rAnswer: '',\r\n                radiobuttonAnswers: []\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeAsk = e => {\r\n        this.setState({\r\n            Question: {...this.state.Question,\r\n                ask: e.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <PerfectScrollbar>\r\n                            <section>\r\n                        <button className=\"buttonAdd\" type=\"button\" value=\"Open\" onClick={() => this.openModal()}>\r\n                            <AddCircle color=\"white\" style={{ fontSize: 20, marginTop: -2 }} /> <span style={{marginLeft: 5}}>ADD NEW QUESTION</span>\r\n                        </button>\r\n                                <Modal \r\n                                    visible={this.state.visible}\r\n                                    width=\"700\"\r\n                                    height=\"600\"\r\n                                    effect=\"fadeInUp\"\r\n                                    onClickAway={() => this.closeModal()\r\n                                    }\r\n                                >\r\n                                    <div className=\"ara scrollClass\">\r\n                                    <div class=\"qw ara\">\r\n                                        <form>\r\n                                            <label for=\"exampleInputEmail1\">Enter question</label>\r\n                                        <input type=\"text\"\r\n                                            class=\"form-control chAlign1\"\r\n                                            value= { this.state.Question.ask }\r\n                                            onChange={this.onChangeAsk}\r\n                                            required    \r\n                                        />\r\n                                        \r\n                                            <label for=\"exampleFormControlSelect1\">Type of question</label>\r\n                                            <select\r\n                                                value={this.state.Question.select}\r\n                                                class=\"form-control chAlign1\"\r\n                                                id=\"exampleFormControlSelect1\"\r\n                                                onChange={this.selectEvent}>\r\n                                                    <option selected>Select Type</option>\r\n                                                    <option value=\"text\" >Text</option>\r\n                                                    <option value=\"radio\" >Radio button</option>\r\n                                                    <option value=\"checkbox\" >Checkbox</option>\r\n                                            </select>\r\n\r\n                                        <h1>{this.displayQuestion()}</h1>\r\n                                        \r\n                                        <button type=\"submit\"\r\n                                            onClick={this.aa}\r\n                                            className={this.state.Question.select === 'text' || this.state.Question.radiobuttonAnswers.length > 0 ? \"buttonAdd\" : \"buttonLoginDisabled\"}\r\n                                            disabled={ this.state.Question.select === 'text' || this.state.Question.radiobuttonAnswers.length > 0 ? false : true }>\r\n                                            <Add color=\"white\" style={{ fontSize: 20, marginTop: -2 }} />\r\n                                            <span style={{marginLeft: 5}}>ADD QUESTION</span>\r\n                                        </button>\r\n\r\n                                        </form>\r\n                                    </div>\r\n                                        \r\n                                        <Link onClick={() => this.closeModal()}>Close</Link>\r\n                                    </div>\r\n                                </Modal>\r\n                    </section>\r\n                    </PerfectScrollbar>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default QuestionModal;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Radiobutton.js",["115"],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\RadioButton.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\Checkbox.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ViewSurevyItem.js",["116","117","118","119"],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\ParticleComp.js",["120"],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AdminViewSurveyList.js",["121","122"],"import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport '../styles/viewSurveys.css';\r\nimport AdminSurveyItem from \"../components/AdminSurveyItem\";\r\nimport axios from 'axios';\r\n\r\nimport '../styles/home.css';\r\nclass AdminViewSurveyList extends Component {\r\n    state = {\r\n\r\n        surveyList: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:5000/surveys/')\r\n          .then(response => {\r\n            this.setState({ surveyList: response.data })\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          })\r\n    }\r\n    \r\n    renderItem = () => {\r\n        if (this.state.surveyList.length == 0) {\r\n            return <React.Fragment>\r\n                <h1 style={{color: '#fff'}}>No surveys are available at the moment</h1>\r\n\r\n            </React.Fragment>\r\n        }\r\n\r\n        if (this.state.surveyList.length != 0) {\r\n            return <React.Fragment>\r\n                {this.state.surveyList.reverse().map(survey => \r\n                        \r\n                        <AdminSurveyItem surveys={survey} key={survey._id} />\r\n                        \r\n                    )}\r\n\r\n            </React.Fragment>\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"pageStyle1 jumbotron vertical-center\"> \r\n                    \r\n                    {this.renderItem()}\r\n                    \r\n               \r\n                </div>\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AdminViewSurveyList;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\AdminSurveyItem.js",["123"],"import React, { Component } from 'react'; \r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport { Confirm } from 'react-st-modal';\r\nimport axios from 'axios';\r\nimport { Delete,Equalizer } from '@material-ui/icons';\r\n\r\nclass AdminSurveyItem extends Component {\r\n\r\n\r\n    deleteSurvey = (id) => {\r\n\r\n        axios.delete('http://localhost:5000/surveys/'+id)\r\n        .then(response => { console.log(response.data)});\r\n  \r\n        \r\n        window.location = '/login';\r\n    }\r\n\r\n    redirect = (id) => {\r\n        window.location = \"/survey-analysis/\"+id\r\n    }\r\n\r\n    render() { \r\n        const { _id,surveyTitle,surveyDesc,count } = this.props.surveys\r\n        return ( \r\n            <React.Fragment>\r\n                <div class=\"container p-3 contSurveys white-grad w-75\">\r\n                    <h2>{surveyTitle}</h2>\r\n                        <div class=\"cont1Home\">\r\n                            <p>{surveyDesc}</p>\r\n                    </div>\r\n                        <p  style={{ fontSize: 18, color: \"#2e8f39\",fontWeight : 500 }}>\r\n                            Total responses :\r\n                            <span\r\n                                style={{ marginLeft: 10, fontFamily: 'Verdana, Geneva, Tahoma, sans-serif' }}\r\n\r\n                            >\r\n                                {count}\r\n                            </span> \r\n                            \r\n                        </p>\r\n                    <button\r\n                        className={count === 0 ? \"buttonDisabled\" : \"buttonAnalysis\"}\r\n                        disabled={count === 0 ? true : false}\r\n                        onClick={() => this.redirect(_id)}>\r\n                        <Equalizer color=\"white\" style={{ fontSize: 18, marginTop: -2 }} />\r\n                        <span style={{marginLeft: 5}}>VIEW ANALYSIS</span>\r\n                        </button>  <br />\r\n                    <button\r\n                        onClick={async () => {\r\n                            const result = await Confirm('Are you sure you want to delete this survey?', \r\n                                'Delete Survey');\r\n                            \r\n                            if (result) {\r\n                                {this.deleteSurvey(_id)}\r\n                            } else {\r\n                                // Сonfirmation not confirmed\r\n                            }\r\n                            }}\r\n                        className=\"buttonDelete\" style={{ marginTop: '5px' }}>\r\n                        <Delete color=\"white\" style={{ fontSize: 18, marginTop: -2 }} />\r\n                        <span style={{marginLeft: 5}}>DELETE SURVEY</span>\r\n                        </button>\r\n                 </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AdminSurveyItem;","C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyAnalysis.js",[],"C:\\Users\\Arosh\\Documents\\Tutorials\\online survey system\\front-end\\src\\components\\SurveyAnalyisItem.js",["124","125","126","127","128","129","130","131"],"import React, { Component } from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\nimport '../styles/surveyAnalysis.css';\r\n\r\nclass SurveyAnalysisItem extends Component {\r\n    state = {\r\n        question: [],\r\n        barChar: {\r\n                    options: {\r\n                    chart: {\r\n                        id: \"basic-bar\"\r\n                    },\r\n                    xaxis: {\r\n                        categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999]\r\n                    }\r\n                    },\r\n                    series: [\r\n                    {\r\n                        name: \"series-1\",\r\n                        data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n                    }\r\n                        ]\r\n                }\r\n    };\r\n\r\n    renderTextGraph = (s, i) => {\r\n\r\n        return <React.Fragment>\r\n            \r\n            <div className=\"ex1\">\r\n                        {this.state.question.questionAnswers.reverse().map(ans => \r\n                            <li> {ans} </li>\r\n                        )}\r\n            </div>\r\n            \r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    renderRadioGraph = (s, i) => {\r\n\r\n\r\n        return <React.Fragment>\r\n            <div className=\"nooga\">\r\n            <select value={this.state.val} class=\"form-select\" aria-label=\"Default select example\" onChange={this.onchangeVal}>\r\n                <option value=\"1\">Pie chart</option>\r\n                <option value=\"2\">Donut chart</option>\r\n                </select>\r\n            </div>\r\n            \r\n            {this.renderChart()}\r\n        </React.Fragment>\r\n    }\r\n\r\n    renderCheckboxGraph = (s, i) => {\r\n        \r\n\r\n\r\n        return <React.Fragment>\r\n            <div className=\"nooga\">\r\n            \r\n                <select value={this.state.val} class=\"form-select\" aria-label=\"Default select example\" onChange={this.onchangeVal}>\r\n                <option value=\"3\">Bar chart</option>\r\n                <option value=\"4\">Line chart</option>\r\n                </select>\r\n                </div>\r\n\r\n            {this.renderChart()}\r\n\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    onchangeVal = e => {\r\n        this.setState({ val: e.target.value });\r\n        console.log(this.state.val);\r\n    }\r\n\r\n    renderBarChart = () => {\r\n        let pieChartCategories = [];\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.answers.length; index++) {\r\n            pieChartCategories=[...pieChartCategories,this.state.question.answers[index].options];\r\n            \r\n        }\r\n\r\n        let pieChartData =[]\r\n        for (let index = 0; index < pieChartCategories.length; index++) {\r\n            pieChartData[index] = 0;\r\n            \r\n        }\r\n\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.questionAnswers.length; index++) {\r\n            for (let l = 0; l < pieChartCategories.length; l++) {\r\n\r\n                if (this.state.question.questionAnswers[index]==pieChartCategories[l]) {\r\n                    pieChartData[l] = pieChartData[l] + 1;\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        let barChar= {\r\n            options: {\r\n            chart: {\r\n                id: \"basic-bar\"\r\n            },\r\n            xaxis: {\r\n                categories: [...pieChartCategories]\r\n            }\r\n            },\r\n            series: [\r\n            {\r\n                name: \"series-1\",\r\n                data: [...pieChartData]\r\n            }\r\n                ]\r\n        }\r\n\r\n        return <React.Fragment>\r\n                <Chart\r\n                    options={barChar.options}\r\n                    series={barChar.series}\r\n                    type=\"bar\"\r\n                    width=\"100%\"\r\n                    height=\"400\"\r\n                />\r\n            </React.Fragment>\r\n\r\n    }\r\n\r\n    renderPolarAreaChart = () => {\r\n        let pieChartCategories = [];\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.answers.length; index++) {\r\n            pieChartCategories=[...pieChartCategories,this.state.question.answers[index].options];\r\n            \r\n        }\r\n\r\n        let pieChartData =[]\r\n        for (let index = 0; index < pieChartCategories.length; index++) {\r\n            pieChartData[index] = 0;\r\n            \r\n        }\r\n\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.questionAnswers.length; index++) {\r\n            for (let l = 0; l < pieChartCategories.length; l++) {\r\n\r\n                if (this.state.question.questionAnswers[index]==pieChartCategories[l]) {\r\n                    pieChartData[l] = pieChartData[l] + 1;\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        let lineChart = {\r\n          \r\n            series: [{\r\n              name: 'Responses',\r\n              data: [...pieChartData]\r\n            }],\r\n            options: {\r\n              chart: {\r\n                height: 350,\r\n                type: 'line',\r\n              },\r\n              stroke: {\r\n                width: 7,\r\n                curve: 'smooth'\r\n              },\r\n              xaxis: {\r\n                categories: [...pieChartCategories],\r\n                tickAmount: 10,\r\n              },\r\n              title: {\r\n                text: 'Social Media',\r\n                align: 'left',\r\n                style: {\r\n                  fontSize: \"16px\",\r\n                  color: '#666'\r\n                }\r\n              },\r\n              fill: {\r\n                type: 'gradient',\r\n                gradient: {\r\n                  shade: 'dark',\r\n                  gradientToColors: [ '#02c449'],\r\n                  shadeIntensity: 1,\r\n                  type: 'horizontal',\r\n                  opacityFrom: 1,\r\n                  opacityTo: 1,\r\n                  stops: [0, 100, 100, 100]\r\n                },\r\n              },\r\n              markers: {\r\n                size: 4,\r\n                colors: [\"#FFA41B\"],\r\n                strokeColors: \"#fff\",\r\n                strokeWidth: 2,\r\n                hover: {\r\n                  size: 7,\r\n                }\r\n              }\r\n            },\r\n          \r\n          \r\n          };\r\n        \r\n\r\n        return <div>\r\n                <Chart\r\n                    options={lineChart.options}\r\n                    series={lineChart.series}\r\n                    type=\"line\"\r\n                    width=\"100%\"\r\n                    height=\"400\"\r\n                />\r\n            </div>\r\n\r\n    }\r\n\r\n    renderDonutChart = () => {\r\n        let pieChartCategories = [];\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.answers.length; index++) {\r\n            pieChartCategories=[...pieChartCategories,this.state.question.answers[index].options];\r\n            \r\n        }\r\n\r\n        let pieChartData =[]\r\n        for (let index = 0; index < pieChartCategories.length; index++) {\r\n            pieChartData[index] = 0;\r\n            \r\n        }\r\n\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.questionAnswers.length; index++) {\r\n            for (let l = 0; l < pieChartCategories.length; l++) {\r\n\r\n                if (this.state.question.questionAnswers[index]==pieChartCategories[l]) {\r\n                    pieChartData[l] = pieChartData[l] + 1;\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        let pieChart= {\r\n            options: {labels: [...pieChartCategories]},\r\n            series: [...pieChartData],\r\n            \r\n        }\r\n\r\n        return <div>\r\n            <Chart\r\n                        options={pieChart.options}\r\n                series={pieChart.series}\r\n                        type=\"donut\"\r\n                        width=\"100%\"\r\n                        height=\"400\" />\r\n            </div>\r\n\r\n    }\r\n\r\n    renderPieChart = () => {\r\n        let pieChartCategories = [];\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.answers.length; index++) {\r\n            pieChartCategories=[...pieChartCategories,this.state.question.answers[index].options];\r\n            \r\n        }\r\n\r\n        let pieChartData =[]\r\n        for (let index = 0; index < pieChartCategories.length; index++) {\r\n            pieChartData[index] = 0;\r\n            \r\n        }\r\n\r\n        \r\n\r\n        for (let index = 0; index < this.state.question.questionAnswers.length; index++) {\r\n            for (let l = 0; l < pieChartCategories.length; l++) {\r\n\r\n                if (this.state.question.questionAnswers[index]==pieChartCategories[l]) {\r\n                    pieChartData[l] = pieChartData[l] + 1;\r\n                }\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n        let pieChart= {\r\n            options: {labels: [...pieChartCategories]},\r\n            series: [...pieChartData]\r\n            \r\n        }\r\n\r\n        return <React.Fragment>\r\n            <Chart\r\n                        options={pieChart.options}\r\n                series={pieChart.series}\r\n                        type=\"pie\"\r\n                        width=\"100%\"\r\n                        height=\"400\"\r\n                        />\r\n            </React.Fragment>\r\n\r\n    }\r\n\r\n    renderChart = () => {\r\n       \r\n\r\n        \r\n        if(this.state.val == 3) {\r\n            return this.renderBarChart();\r\n         }\r\n\r\n        if(this.state.val == 4) {\r\n            return this.renderPolarAreaChart();\r\n         }\r\n\r\n        if(this.state.val == 1) {\r\n           return this.renderPieChart();\r\n        }\r\n\r\n        if(this.state.val == 2) {\r\n            return this.renderDonutChart();\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    display = (s,i) => {\r\n        if (s.type === \"text\") {\r\n            return this.renderTextGraph(s,i)\r\n        }\r\n\r\n        if (s.type === \"radio\") {\r\n            return this.renderRadioGraph(s,i)\r\n        }\r\n\r\n        if (s.type === \"checkbox\") {\r\n            return this.renderCheckboxGraph(s,i)\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ question: this.props.question })\r\n        \r\n        if(this.props.question.type === 'checkbox') {\r\n            this.setState({ val: '3' });\r\n        }\r\n\r\n        if(this.props.question.type === 'radio') {\r\n            this.setState({ val: '1' });\r\n        }\r\n\r\n          \r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div class=\"container p-3 contSurveys white-grad w-75\">\r\n\r\n\r\n                \r\n                <div className=\"itemSet fuse\"> \r\n                        <label for=\"exampleInputPassword1\">Q{this.props.i + 1} : {this.state.question.question}</label>\r\n                </div>\r\n\r\n                {this.display(this.state.question,this.props.i)}    \r\n\r\n                \r\n                </div>\r\n                        \r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default SurveyAnalysisItem;",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":13},{"ruleId":"140","severity":1,"message":"141","line":46,"column":96,"nodeType":"142","messageId":"143","endLine":46,"endColumn":98},{"ruleId":"140","severity":1,"message":"141","line":49,"column":96,"nodeType":"142","messageId":"143","endLine":49,"endColumn":98},{"ruleId":"140","severity":1,"message":"141","line":52,"column":96,"nodeType":"142","messageId":"143","endLine":52,"endColumn":98},{"ruleId":"136","severity":1,"message":"144","line":8,"column":8,"nodeType":"138","messageId":"139","endLine":8,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":31,"column":41,"nodeType":"147","endLine":31,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":36,"column":41,"nodeType":"147","endLine":36,"endColumn":62},{"ruleId":"145","severity":1,"message":"146","line":40,"column":41,"nodeType":"147","endLine":40,"endColumn":62},{"ruleId":"140","severity":1,"message":"141","line":25,"column":42,"nodeType":"142","messageId":"143","endLine":25,"endColumn":44},{"ruleId":"140","severity":1,"message":"148","line":32,"column":42,"nodeType":"142","messageId":"143","endLine":32,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":154,"column":57,"nodeType":"151","messageId":"152","endLine":154,"endColumn":75},{"ruleId":"136","severity":1,"message":"153","line":2,"column":10,"nodeType":"138","messageId":"139","endLine":2,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":14,"column":37,"nodeType":"142","messageId":"143","endLine":14,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":36,"column":37,"nodeType":"142","messageId":"143","endLine":36,"endColumn":39},{"ruleId":"140","severity":1,"message":"141","line":57,"column":37,"nodeType":"142","messageId":"143","endLine":57,"endColumn":39},{"ruleId":"140","severity":1,"message":"148","line":86,"column":107,"nodeType":"142","messageId":"143","endLine":86,"endColumn":109},{"ruleId":"136","severity":1,"message":"154","line":6,"column":17,"nodeType":"138","messageId":"139","endLine":6,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":97,"column":49,"nodeType":"142","messageId":"143","endLine":97,"endColumn":51},{"ruleId":"140","severity":1,"message":"141","line":226,"column":35,"nodeType":"142","messageId":"143","endLine":226,"endColumn":37},{"ruleId":"140","severity":1,"message":"141","line":235,"column":35,"nodeType":"142","messageId":"143","endLine":235,"endColumn":37},{"ruleId":"149","severity":1,"message":"150","line":314,"column":41,"nodeType":"151","messageId":"152","endLine":314,"endColumn":58},{"ruleId":"136","severity":1,"message":"155","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":26,"column":42,"nodeType":"142","messageId":"143","endLine":26,"endColumn":44},{"ruleId":"140","severity":1,"message":"148","line":33,"column":42,"nodeType":"142","messageId":"143","endLine":33,"endColumn":44},{"ruleId":"149","severity":1,"message":"150","line":56,"column":33,"nodeType":"151","messageId":"152","endLine":56,"endColumn":57},{"ruleId":"140","severity":1,"message":"141","line":101,"column":63,"nodeType":"142","messageId":"143","endLine":101,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":158,"column":63,"nodeType":"142","messageId":"143","endLine":158,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":252,"column":63,"nodeType":"142","messageId":"143","endLine":252,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":297,"column":63,"nodeType":"142","messageId":"143","endLine":297,"endColumn":65},{"ruleId":"140","severity":1,"message":"141","line":327,"column":27,"nodeType":"142","messageId":"143","endLine":327,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":331,"column":27,"nodeType":"142","messageId":"143","endLine":331,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":335,"column":27,"nodeType":"142","messageId":"143","endLine":335,"endColumn":29},{"ruleId":"140","severity":1,"message":"141","line":339,"column":27,"nodeType":"142","messageId":"143","endLine":339,"endColumn":29},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Particles' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Link' is defined but never used.","'select' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]